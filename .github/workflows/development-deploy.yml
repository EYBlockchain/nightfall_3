# Deploys containers to the development environment.
#
name: Deploy to Development
on: workflow_dispatch

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DOCKER_ACTOR: ${{ secrets.DOCKER_ACTOR }}

jobs:

  build-worker:
    name: build-worker
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to docker registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $DOCKER_ACTOR --password-stdin
      - name: Docker push worker
        run: |
          docker build -t ghcr.io/eyblockchain/nightfall3-worker . -f docker/file/worker.Dockerfile
          docker push ghcr.io/eyblockchain/nightfall3-worker

  build-deployer:
    name: build-deployer
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to docker registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $DOCKER_ACTOR --password-stdin
      - name: Docker push deployer
        run: |
          docker build -t ghcr.io/eyblockchain/nightfall3-deployer . -f docker/file/deployer.Dockerfile
          docker push ghcr.io/eyblockchain/nightfall3-deployer

  build-optimist:
    name: build-optimist
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to docker registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $DOCKER_ACTOR --password-stdin
      - name: Docker push optimist
        run: |
          docker build -t ghcr.io/eyblockchain/nightfall3-optimist . -f docker/file/optimist.Dockerfile
          docker push ghcr.io/eyblockchain/nightfall3-optimist

  build-proposer:
    name: build-proposer
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to docker registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $DOCKER_ACTOR --password-stdin
      - name: Docker push proposer
        run: |
          docker build -t ghcr.io/eyblockchain/nightfall3-proposer . -f docker/file/proposer.Dockerfile
          docker push ghcr.io/eyblockchain/nightfall3-proposer

#  build-challenger:
#    name: Build challenger
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Login to docker registry
#        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $DOCKER_ACTOR --password-stdin
#      - name: Docker push challenger
#        run: |
#          docker build -t ghcr.io/eyblockchain/nightfall3-challenger . -f docker/file/challenger.Dockerfile
#          docker push ghcr.io/eyblockchain/nightfall3-challenger

#  build-liquidity:
#    name: Build liquidity provider
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Login to docker registry
#        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $DOCKER_ACTOR --password-stdin
#      - name: Docker push liqidity
#        run: |
#          docker build -t ghcr.io/eyblockchain/nightfall3-liquidity . -f docker/file/liquidity.Dockerfile
#          docker push ghcr.io/eyblockchain/nightfall3-liquidity

  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    environment:
      name: Development
    needs: [build-deployer, build-optimist, build-proposer, build-worker]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Add secret environment variables
        run: |
          echo "ETH_PRIVATE_KEY=${{ secrets.ETH_PRIVATE_KEY }}" >> deployment-scripts/dev.env
          echo "PROPOSER_ETHEREUM_SIGNING_KEY=${{ secrets.PROPOSER_ETHEREUM_SIGNING_KEY }}" >> deployment-scripts/dev.env
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/dev.key
          chmod 600 ~/.ssh/dev.key
          cat >>~/.ssh/config <<END
          Host dev
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/dev.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: pong
          SSH_KEY: ${{ secrets.DEV_SSH_KEY }}
          SSH_HOST: ohio.nightfall3.com
      - name: Copy and rename files
        run: |
          scp deployment-scripts/* dev:~/
          ssh dev 'mv dev.env .env'
          ssh dev 'mv docker-compose.beta.yml docker-compose.yml'
      - name: Login to docker registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $DOCKER_ACTOR --password-stdin
      - name: Pull docker images
        run: ssh dev './pull-images.sh'
      - name: Kill any start scripts
        run: ssh dev 'pkill -KILL start.sh || true'
      - name: Stop previous nightfall, delete build volume
        run: ssh dev './down.sh'
      - name: Start new instance
        run: ssh dev 'nohup ./start.sh > /dev/null 2>&1 > start.log &'
