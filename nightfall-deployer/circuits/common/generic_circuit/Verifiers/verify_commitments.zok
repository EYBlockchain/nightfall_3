from "hashes/poseidon/poseidon.zok" import main as poseidon
from "../../utils/structures.zok" import Point

/*
* Verify that all commitments are correct
*/
def main<NumCommitments>(\
    field packedErcAddress,\
    field idRemainder,\
    field[NumCommitments] commitmentHashes,\
    private field[NumCommitments] newCommitmentValues,\
    private field[NumCommitments] newCommitmentSalts,\
    private Point[NumCommitments] recipientPublicKey\
) -> bool:

    //Check that all the commitments are valid. If NumCommitments equals zero this loop will be ignored
    for u32 i in 0..NumCommitments do
        
        //Calculate the commmitment hash from the newCommitment parameters
        field commitment = if newCommitmentValues[i] == 0 then  0 else \
            poseidon([\
                packedErcAddress,\
                idRemainder,\
                newCommitmentValues[i],\
                ...recipientPublicKey[i],\
                newCommitmentSalts[i]\
            ])\
        fi

        //Check that the calculated commitment matches with the one contained in the transaction
        assert(commitment == commitmentHashes[i])
    endfor    
    
    return true
