from "hashes/poseidon/poseidon.zok" import main as poseidon
from "../../utils/structures.zok" import Point

/*
* Verify that all commitments are correct
*/
def main<NumCommitments>(\
    field packedErcAddress,\
    field idRemainder,\
    Point changeZkpPublicKeys,\
    field[NumCommitments] commitments,\
    private field[NumCommitments] newCommitmentValues,\
    private field[NumCommitments] newCommitmentSalts,\
    private Point[NumCommitments] recipientPublicKey\
) -> bool:

    //Check that all the commitments are valid. If NumCommitments equals zero this loop will be ignored
    for u32 i in 0..NumCommitments do
        
        //Calculate the commmitment hash from the newCommitment parameters
        field commitment = poseidon([\
            packedErcAddress,\
            idRemainder,\
            newCommitmentValues[i],\
            ...recipientPublicKey[i],\
            newCommitmentSalts[i]\
        ])

        //Check that the calculated commitment matches with the one contained in the transaction
        assert(newCommitmentValues[i] == 0  || commitment == commitments[i])
    endfor    
    
    return true