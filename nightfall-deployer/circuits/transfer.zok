
from "./common/utils/structures.zok" import Point, PublicTransaction, Nullifiers, Commitments, Transfer;
from "./common/generics/transfer_generic.zok" import transfer_generic;


const u32 numberCommitments = 3;
const u32 numberNullifiers = 4;

def main(\
    PublicTransaction<numberNullifiers,numberCommitments> tx,\
    field[numberNullifiers] roots,\
    field feeAddress,\
    private field rootKey,\
    private Nullifiers<numberNullifiers> nullifiersInfo,\
    private Commitments<numberCommitments> commitmentsInfo,\
    private Transfer transfer\
) {


    assert(transfer_generic::<numberNullifiers,numberCommitments>(\
        tx.value,\
        tx.fee,\
	tx.transactionType,\
	tx.tokenType,\
        tx.historicRootBlockNumberL2,\
	tx.tokenId,\
	tx.ercAddress,\
	tx.recipientAddress,\
	tx.commitments,\
	tx.nullifiers,\
	tx.compressedSecrets,\
        roots,\
        feeAddress,\
        rootKey,\
        nullifiersInfo.oldCommitments.value,\
        nullifiersInfo.oldCommitments.salt,\
        nullifiersInfo.paths,\
        nullifiersInfo.orders,\
        commitmentsInfo.newCommitments.value,\
        commitmentsInfo.newCommitments.salt,\
        commitmentsInfo.recipientPublicKey,\
        transfer.ercAddressPrivate,\
        transfer.tokenIdPrivate,\
        transfer.ephemeralKey\
        ));
}
