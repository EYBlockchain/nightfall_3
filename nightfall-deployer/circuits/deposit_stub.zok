from "./common/utils/structures.zok" import CommitmentPreimage,Point, PublicTransaction
from "./common/generic_circuit/Stubs/commitments_stub.zok" import main as commitment_stub
from "./common/generic_circuit/Stubs/nullifiers_stub.zok" import main as nullifiers_stub
from "./common/generic_circuit/Stubs/encryption_stub.zok" import main as encryption_stub
from "./common/generic_circuit/Verifiers/verify_structure.zok" import main as verify_structure

const u32 txType = 0
const u32 numCommitments = 1
const u32 numNullifiers = 0
const u32 transfer = 0

def main(\
    PublicTransaction tx,\
    private CommitmentPreimage<numCommitments> newCommitment,\
    private Point[numCommitments] recipientPublicKey\
    ) -> ():

    //Verify public transaction structure
    assert(verify_structure::<0, 2, 2>(\
        tx.value,\
	    tx.transactionType,\
	    tx.tokenType,\
	    tx.tokenId,\
	    tx.ercAddress,\
	    tx.recipientAddress,\
	    tx.commitments,\
	    tx.nullifiers,\
	    tx.historicRootBlockNumberL2,\
	    tx.compressedSecrets\
    ))

    assert(commitment_stub::<numCommitments>(\
        newCommitment.value, newCommitment.salt, recipientPublicKey))
    
    return
