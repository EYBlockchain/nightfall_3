// Inputs for main:
// - ercContractAddress (public) is the ERCx contract address
// - value (public) is the 256 bit value (fungible) or identifier (non-fungible)
// - compressedZkpPublicKey (private) is the public key of the newCommitment derived by hashing the Secret Key Sk of the newCommitment. IT IS KEPT PRIVATE!!
// - salt (private) is the salt for the newCommitment
// - newCommitment (public) is the newCommitment

type Point = field[2]

struct TokenId {
	field top4Bytes
	field remainder
}

def main(\
	field ercContractAddress,\
	u32[8] id,\
 	field value,\
	private Point compressedZkpPublicKey,\
	private field salt,\
	field newCommitment\
)->():

	field u = compressedZkpPublicKey[0] * compressedZkpPublicKey[1] + ercContractAddress + value + newCommitment * salt
	u32 v = id[0] * id[1] + id[2] + id[3] + id[4] + id[5] + id[6] * id[7]
	assert(u==u)
	assert (v==v)
	return
