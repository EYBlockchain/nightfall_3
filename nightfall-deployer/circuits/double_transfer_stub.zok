
struct OldCommitment {
	u32[8] ercAddress
	u32[8] id
	u32[8] value
	u32[8] salt
	u32[8] hash
}

struct NewCommitment {
	u32[8] publicKeyRecipient
	u32[8] value
	u32[8] salt
	u32[8] hash
}

struct Nullifier {
	u32[8] privateKeySender
	u32[8] hash
}

def main(\
	field publicInputsHash,\
	private OldCommitment[2] oldCommitment,\
	private NewCommitment[2] newCommitment,\
	private Nullifier[2] nullifier,\
	private field[2][33] path,\
	private field[2] order\
)->():

	field u = publicInputsHash
	u32 v = 0x00000000
	for field j in 0..2 do
		for field i in 0..8 do
			v = v + oldCommitment[j].id[i] +\
				oldCommitment[j].ercAddress[i] +\
				oldCommitment[j].value[i] +\
				oldCommitment[j].salt[i] +\
				oldCommitment[j].hash[i] +\
				newCommitment[j].publicKeyRecipient[i] +\
				newCommitment[j].value[i] +\
				newCommitment[j].salt[i] +\
				newCommitment[j].hash[i] +\
				nullifier[j].privateKeySender[i] +\
				nullifier[j].hash[i]
		endfor
	endfor
	for field j in 0..2 do
		for field i in 0..33 do
			u = u * path[j][i]
		endfor
	endfor
	u = u * order[0] * order[1]
	assert(v == v)
	assert(u == u)

	return
