from "./common/utils/structures.zok" import Point, PublicTransaction, Nullifiers, Commitments, Transfer, SHIFT
from "./common/generic_circuit/Stubs/nullifiers_stub.zok" import main as nullifier_stub
from "./common/generic_circuit/Stubs/commitments_stub.zok" import main as commitment_stub
from "./common/generic_circuit/Stubs/encryption_stub.zok" import main as encryption_stub
from "./common/casts/u8_array_to_field.zok" import main as u8_array_to_field


def main(\
    PublicTransaction tx,\
    field[4] roots,\
    field ercAddressFee,\
    private Nullifiers<4> nullifiers,\
    private Commitments<3> commitments,\
    private Transfer transfer\
)-> ():
    
    field[4] nullifiersValue = u8_array_to_field(nullifiers.oldCommitments.value)
    field[3] commitmentsValue = u8_array_to_field(commitments.newCommitments.value)

    assert(nullifier_stub::<4>(\
        roots, nullifiersValue, nullifiers.oldCommitments.salt,\
        nullifiers.rootKey, nullifiers.paths, nullifiers.orders))

    assert(commitment_stub::<3>(\
        commitmentsValue, commitments.newCommitments.salt, commitments.recipientPublicKey))

    assert(encryption_stub(transfer.ephemeralKey, transfer.ercAddressTransfer, transfer.idTransfer))
    return
