from "../common/utils/structures.zok" import Point, PublicTransaction
from "../common/utils/calculations.zok" import sum
from "utils/pack/u32/pack256.zok" import main as u32_8_to_field


def main<TxType, NumNullifiers, NumCommitments, Transfer>(\
    PublicTransaction tx,\
    field[NumNullifiers] nullifierRoots,\
    private field[NumNullifiers] oldCommitmentValues,\
    private field[NumNullifiers] oldCommitmentSalts,\
    private field[NumNullifiers] rootKey,\
    private field[NumNullifiers][32] paths,\
	private field[NumNullifiers] orders,\
    private field[NumCommitments] newCommitmentValues,\
    private field[NumCommitments] newCommitmentSalts,\
    private Point[NumCommitments] recipientPublicKey,\
    private u32[Transfer][8] ephemeralKey,\
    private field[Transfer] ercAddressTransfer,\
    private u32[Transfer][8] idTransfer\
)-> (bool):
    
    for u32 i in 0..NumNullifiers do
        field s = nullifierRoots[i] * sum([\
            rootKey[i], oldCommitmentValues[i],\
            oldCommitmentSalts[i],...paths[i], orders[i]\
        ])
        assert(s == s)
    endfor

     for u32 i in 0..NumCommitments do
        field s = tx.ercAddress * sum([\
            newCommitmentValues[i], newCommitmentSalts[i],\
            ...recipientPublicKey[i]\
        ])
        assert(s == s)
    endfor

     for u32 i in 0..Transfer do
        field s = tx.ercAddress * sum([\
            ercAddressTransfer[i],\
            u32_8_to_field(ephemeralKey[i]),\
            u32_8_to_field(idTransfer[i])\
        ])
        assert(s == s)
    endfor

    return true
