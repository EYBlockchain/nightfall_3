from "../generic_circuit.zok" import main as generic
from "../../common/utils/structures.zok" import CommitmentPreimage, CompressedPoint,Point, PublicTransaction

const u32 txType = 1
const u32 numNullifiers = 1
const u32 numCommitments = 2
const u32 transfer = 1

def main(\
    PublicTransaction transaction,\
    private field[numNullifiers] rootKey,\
    private CommitmentPreimage<numNullifiers> oldCommitment,\
    private field[numNullifiers][32] path,\
	private field[numNullifiers] order,\
    private CommitmentPreimage<numCommitments> newCommitment,\
    private Point[numCommitments] recipientPublicKey,\
    CompressedPoint<transfer> compressedEphemeralPublicKey,\
    private field[transfer] ercAddressTransfer,\
    private u32[transfer][8] idTransfer,\
    private u32[transfer][8] ephemeralKey\
    ) -> ():
    
    assert(generic::<txType,numNullifiers,numCommitments, transfer>(\
            transaction,\
            oldCommitment.value,\
            oldCommitment.salt,\
            rootKey,\
            path,\
            order,\
            newCommitment.value,\
            newCommitment.salt,\
            recipientPublicKey,\
            compressedEphemeralPublicKey.parity,\
            compressedEphemeralPublicKey.ordinate,\
            ephemeralKey,\
            ercAddressTransfer,\
            idTransfer\
        )\
    )
    
    return
