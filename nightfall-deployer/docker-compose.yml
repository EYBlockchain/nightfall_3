version: '3.5'

services:
  deployer:
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - ./contracts/:/app/contracts/
      - ./migrations/:/app/migrations/
      - ./truffle-config.js:/app/truffle-config.js
      - ./circuits/:/app/circuits/
      - build:/app/build/
      - ./src:/app/src/
      - ./config:/app/config/
      - proving_files:/app/proving_files
    depends_on:
      - ganache
      - worker
    environment:
      LOG_LEVEL: debug
      ETH_NETWORK: ganache
      BLOCKCHAIN_WS_HOST: ganache
      BLOCKCHAIN_PORT: 8545
    networks:
      - nightfall_network

    # ganache test client
  ganache:
    image: trufflesuite/ganache-cli:latest
    command:
      ganache-cli --accounts=10 --defaultBalanceEther=1000 --gasLimit=12500000 --deterministic
    ports:
      - '8545:8545'
    networks:
      - nightfall_network

  # The Zokrates Microservice
  # Note that the circuits are bind mounted.  Normally they would be a volume
  # but we can't do a bind mount and a volume in the same place.  This is
  # only an issue for development where we want to mount the local file system
  worker:
    image: docker.pkg.github.com/eyblockchain/zokrates-worker/zokrates_worker:1.0.7
    command: ./start-script
    volumes:
      - type: volume
        source: proving_files
        target: /app/output/
      - type: bind
        source: ./circuits/
        target: /app/circuits/
    ports:
      - '8080:80'
    networks:
      - nightfall_network
  # Timber service, configured for nightfall
  timber:
    build:
      context: ../nightfall-timber
      dockerfile: Dockerfile
    depends_on:
      - ganache
      - deployer
      - timber-merkle-tree
    networks:
      - nightfall_network
    volumes:
      - type: volume
        source: build
        target: /app/build/
    environment:
      BLOCKCHAIN_WS_HOST: ws://ganache
      BLOCKCHAIN_PORT: 8545
      MONGO_HOST: timber-merkle-tree
      MONGO_PORT: 27017
      MONGO_NAME: merkle_tree
      MONGO_USERNAME: admin
      MONGO_PASSWORD: admin

  #The database storing the merkle tree
  #At present Timber seems to need a specially configured db.  If we can fix
  #that, we can run it on a vanilla mongo instance
  timber-merkle-tree:
    image: docker.pkg.github.com/eyblockchain/timber-mongo/timber_mongo:73c12fc8bd35d4cab739c836b738b416f6db64ba
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=merkle_tree
    volumes:
      - timber-merkle-tree-volume:/data/db
    networks:
      - nightfall_network

volumes:
  chaindata:
  proving_files:
  build:
  timber-merkle-tree-volume:

networks:
  nightfall_network:
