/**
Module to decode the input of a proposeBlcok
*/
import Web3 from 'web3';

const PROPOSE_BLOCK_TYPES = [
  '(uint48,address,bytes32,uint256,bytes32)',
  '(uint64,uint64[2],uint8,uint8,bytes32,bytes32,bytes32,bytes32,bytes32[2],bytes32[2],bytes32[8],uint[4])[]',
]; // used to encode/decode proposeBlock signature
/*
const testInput =
  '0xf99158ab000000000000000000000000000000000000000000000000000000000000003e0000000000000000000000000d234bb221c5f608261e9a1b6edef6e5a10d8bf603c615366f221a9bb2bdea59bb250f4d45620bcb1b4f7596330db34e88c3f621000000000000000000000000000000000000000000000000000000000000002abdfdd4734b3058d3bcb5c4ea79eee24944e0eefb9f637b64bb42a12038cb724100000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006f3646cd1edba58c21d9360a8bdb2d2d14c6b97b4e9c330fac95b12af44c450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ceee3d99a27282a84397ca7a35d940494e3f9acf0000000000000000000000000000000000000000000000000000000000000000263385e78b8e88626348fc51aeeb5b138479ae907ff894966ef159884231ffdeeb0ba564804afbf2400c75cd4fa3f968c54396d4b64b6f7e7d4f21e79015e80e7dbee4a05f9b2b1fabdf6cdf447bb0b5df29455173fa5e74ef8f8b327a5ed90631828ba27a014646bcf00a278876c93950a60eeb747864351a2c14ce8f66f2895fc5838abb5e533c0fc6350360700f0b526e4bab154248f1d43774f0258d10000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ccbfc13f30d16496b37b9ea4a354795c1bef8e9c0e8656c21f07fa5ce2508d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ceee3d99a27282a84397ca7a35d940494e3f9acf00000000000000000000000000000000000000000000000000000000000000001db104f16b2769df307233bab5f0aa28e04161a33a001fdff88d8cf329a3fd946376d860d0109b00b0b55d3383ec9293268c5c0d83619c5c14f3c8ffac3d855b0f4bc29f87bb5229068d8429d136addf8cd55e3ab6a22dc5e08e3bd72e15841544842ac222c0d4bc258e4b3f4e3c5e00d86a45ff71fc68cbe9cb0524abc818083390977faa22b4f74ad4cbe167cad570cbb5c0fd0d34b7387a60c3a903e6';
*/
const testInput =
  '0x1147b7a300000000000000000000000000000000000000000000000000000000000000000000000000000000000000009c8b2276d490141ae1440da660e470e7c0349c6301c8bea2b0e538d2ab33491fede2a94f314c9cc6878823b650b73e750e169a0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045b77b3cd0a563759caa3c536224364ace0f052a56d45ee3fd60f393d4e5930000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e1b7b854f19a2cebf96b433ba30050d8890618ab000000000000000000000000000000000000000000000000000000000000000027dec62a9e464e2bab23a1078a2cf105ddd457867b048b8702a7adfcf5dac9aacddb62e18c4a7c3559f2cbefb1b55a6c518fe49d6faec6d155060126d705c0d523ccfa39202d65ea4a2d578b1ffc750b83725c614afa217a93f7602f032450b8008a2fc7bd4ccbcb94fc9a50676ba3ff407845172e7954b2e7f955741787b0c312281a64d0ca9dbeb6f33dd4cdbd61b077d563bd44226c854158c90890dd6000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080136c0c65197c0b19444c3095d927c41569dddeace9c560adf475931603470000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e1b7b854f19a2cebf96b433ba30050d8890618ab000000000000000000000000000000000000000000000000000000000000000001a2785979406e4d13e525e154fa55c896b8cab5300b2b1f986bec5f9cd5a2dd6219984c49c2d3bde4810e97ecfbbe6882415b7c04b4e0b77ef7c05f233bfd92c0fee539d54e26620ae0454978064447661e23ce12ebdebaff6ad8544569a31e16c6fe7f9da31602b9a68fb2871a2aadcb776e56d4fc9d9ecff3dff5ff0e410b28890fc305301e696d4b26d448cbfceccc77ab1ec872f7f1d09c32b503dfb1';
// Remove the '0x' and function signature to recove rhte abi bytecode
const abiBytecode = `0x${testInput.slice(10)}`;
const web3 = new Web3();
const decoded = web3.eth.abi.decodeParameters(PROPOSE_BLOCK_TYPES, abiBytecode);
const blockData = decoded['0'];
// const transactionsData = decoded['1'];
// const [leafCount, proposer, root, blockNumberL2, previousBlockHash] = blockData;
console.log(blockData);
