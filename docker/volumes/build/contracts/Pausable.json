{
  "contractName": "Pausable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"initialize()\":{\"details\":\"The constructor sets the original owner of the contract to the sender account.\"},\"owner()\":{\"details\":\"Tells the address of the owner\",\"returns\":{\"_0\":\"the address of the owner\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"project:/contracts/Ownable.sol\":{\"keccak256\":\"0x3bf726c019c80c6756f195d2666ae024b790bab8ecae3dda365997ef27937eee\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://4c7846a8d6a77eab2da8915720a9af92ba4ae8d7ff2535457e3969397aa272dd\",\"dweb:/ipfs/QmfPyHGX9sbDi3GnULxsqv3U4wqENJu9ANe6a8cjc2wSzK\"]},\"project:/contracts/Pausable.sol\":{\"keccak256\":\"0x9753a5bad4bcea9c7fa5c02333367d7ede1b2399814df44fa756d09a189fe15f\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://f3797fc78da1469a96ba50f406c6f65ece416a94bf7ba05de654b00548cc541d\",\"dweb:/ipfs/QmS8inK3DmEa8Z1JSn5bCTQnuUmuQPWTn1TiVEWQrVT927\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: CC0-1.0\n\nimport '@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol';\nimport './Ownable.sol';\n\npragma solidity ^0.8.0;\n\nabstract contract Pausable is PausableUpgradeable, Ownable {\n\n  function initialize() public override(Ownable) virtual onlyInitializing {\n    Ownable.initialize();\n    PausableUpgradeable.__Pausable_init();\n  }\n\n  function pause() external onlyOwner {\n    _pause();\n  }\n\n  function unpause() external onlyOwner {\n    _unpause();\n  }\n}\n",
  "sourcePath": "/app/contracts/Pausable.sol",
  "ast": {
    "absolutePath": "project:/contracts/Pausable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        974
      ],
      "ContextUpgradeable": [
        1016
      ],
      "Initializable": [
        150
      ],
      "Ownable": [
        16031
      ],
      "Pausable": [
        17227
      ],
      "PausableUpgradeable": [
        277
      ]
    },
    "id": 17228,
    "license": "CC0-1.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "id": 17184,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17228,
        "sourceUnit": 278,
        "src": "37:78:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 17185,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17228,
        "sourceUnit": 16032,
        "src": "116:23:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 17186,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "141:23:36"
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 17187,
              "name": "PausableUpgradeable",
              "nameLocations": [
                "196:19:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 277,
              "src": "196:19:36"
            },
            "id": 17188,
            "nodeType": "InheritanceSpecifier",
            "src": "196:19:36"
          },
          {
            "baseName": {
              "id": 17189,
              "name": "Ownable",
              "nameLocations": [
                "217:7:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16031,
              "src": "217:7:36"
            },
            "id": 17190,
            "nodeType": "InheritanceSpecifier",
            "src": "217:7:36"
          }
        ],
        "canonicalName": "Pausable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 17227,
        "linearizedBaseContracts": [
          17227,
          16031,
          277,
          1016,
          150
        ],
        "name": "Pausable",
        "nameLocation": "184:8:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              15982
            ],
            "body": {
              "id": 17207,
              "nodeType": "Block",
              "src": "302:74:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 17197,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16031,
                        "src": "308:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$16031_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 17199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "316:10:36",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15982,
                      "src": "308:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "308:20:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17201,
                  "nodeType": "ExpressionStatement",
                  "src": "308:20:36"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 17202,
                        "name": "PausableUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "334:19:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PausableUpgradeable_$277_$",
                          "typeString": "type(contract PausableUpgradeable)"
                        }
                      },
                      "id": 17204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "354:15:36",
                      "memberName": "__Pausable_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 181,
                      "src": "334:35:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "334:37:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17206,
                  "nodeType": "ExpressionStatement",
                  "src": "334:37:36"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 17208,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17195,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17194,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "285:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "285:16:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "285:16:36"
              }
            ],
            "name": "initialize",
            "nameLocation": "239:10:36",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17193,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 17192,
                  "name": "Ownable",
                  "nameLocations": [
                    "268:7:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16031,
                  "src": "268:7:36"
                }
              ],
              "src": "259:17:36"
            },
            "parameters": {
              "id": 17191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:2:36"
            },
            "returnParameters": {
              "id": 17196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "302:0:36"
            },
            "scope": 17227,
            "src": "230:146:36",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17216,
              "nodeType": "Block",
              "src": "416:19:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17213,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "422:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "422:8:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17215,
                  "nodeType": "ExpressionStatement",
                  "src": "422:8:36"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 17217,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17211,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17210,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "406:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15970,
                  "src": "406:9:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "406:9:36"
              }
            ],
            "name": "pause",
            "nameLocation": "389:5:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:2:36"
            },
            "returnParameters": {
              "id": 17212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "416:0:36"
            },
            "scope": 17227,
            "src": "380:55:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17225,
              "nodeType": "Block",
              "src": "477:21:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17222,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "483:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "483:10:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17224,
                  "nodeType": "ExpressionStatement",
                  "src": "483:10:36"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 17226,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17220,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17219,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "467:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15970,
                  "src": "467:9:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "467:9:36"
              }
            ],
            "name": "unpause",
            "nameLocation": "448:7:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "455:2:36"
            },
            "returnParameters": {
              "id": 17221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "477:0:36"
            },
            "scope": 17227,
            "src": "439:59:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 17228,
        "src": "166:334:36",
        "usedErrors": []
      }
    ],
    "src": "37:464:36"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-16T22:02:02.328Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "initialize()": {
        "details": "The constructor sets the original owner of the contract to the sender account."
      },
      "owner()": {
        "details": "Tells the address of the owner",
        "returns": {
          "_0": "the address of the owner"
        }
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}