{
  "contractName": "SanctionsListInterface",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isSanctioned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isSanctioned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SanctionsListInterface.sol\":\"SanctionsListInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"project:/contracts/SanctionsListInterface.sol\":{\"keccak256\":\"0x76808795d7236d734f449b568a498bb0a13479285f1b59c4e12e2bcfb8020117\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://7fd01a72376e09200a1a7358ad25660a58b6a8a283b55c699124880f96b4f50f\",\"dweb:/ipfs/Qma6jouS3L9xNXiJtCMc3B8YHwk3v4312abHwWMoLPmidU\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: CC0-1.0\n\npragma solidity ^0.8.9;\n\ninterface SanctionsListInterface {\n    function isSanctioned(address addr) external view returns (bool);\n}",
  "sourcePath": "/app/contracts/SanctionsListInterface.sol",
  "ast": {
    "absolutePath": "project:/contracts/SanctionsListInterface.sol",
    "exportedSymbols": {
      "SanctionsListInterface": [
        17833
      ]
    },
    "id": 17834,
    "license": "CC0-1.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 17825,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:39"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SanctionsListInterface",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 17833,
        "linearizedBaseContracts": [
          17833
        ],
        "name": "SanctionsListInterface",
        "nameLocation": "72:22:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "df592f7d",
            "id": 17832,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isSanctioned",
            "nameLocation": "110:12:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17827,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "131:4:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 17832,
                  "src": "123:12:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "123:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "122:14:39"
            },
            "returnParameters": {
              "id": 17831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17830,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17832,
                  "src": "160:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17829,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "159:6:39"
            },
            "scope": 17833,
            "src": "101:65:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 17834,
        "src": "62:106:39",
        "usedErrors": []
      }
    ],
    "src": "37:131:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2023-01-04T16:02:55.695Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}