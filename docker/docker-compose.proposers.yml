version: '3.5'
# Use this script for running up 2 independent proposers with optimist and mongodb services.
services:
  proposer_optimist_1:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    build:
      dockerfile: docker/optimist.standalone.Dockerfile
      context: ..
    container_name: proposer_optimist_1
    depends_on:
      - optimist_mongodb_1
    networks:
      - nightfall_network
    ports:
      - 9091:80
      # websocket port for Optimist is on localhost:9090
      - 9090:8080
    volumes:
      - type: volume
        source: build
        target: /app/build/
    environment:
      WEBSOCKET_PORT: 8080
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST:-host.docker.internal}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT:-8546}
      MONGO_URL: ${OPTIMIST_MONGO_URL:-mongodb://optimist_mongodb_1:27017}
      HASH_TYPE: poseidon
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      IS_CHALLENGER: ${IS_CHALLENGER:-false}
      TRANSACTIONS_PER_BLOCK: ${TRANSACTIONS_PER_BLOCK:-2}
      OPTIMIST_PORT: 9091
      OPTIMIST_WS_PORT: 9090
    command: ['npm', 'run', 'dev']

  proposer_optimist_2:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    build:
      dockerfile: docker/optimist.standalone.Dockerfile
      context: ..
    container_name: proposer_optimist_2
    depends_on:
      - optimist_mongodb_2
    networks:
      - nightfall_network
    ports:
      - 9093:80
      # websocket port for Optimist is on localhost:9090
      - 9092:8080
    volumes:
      - type: volume
        source: build
        target: /app/build/
    environment:
      WEBSOCKET_PORT: 8080
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST:-host.docker.internal}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT:-8546}
      MONGO_URL: ${OPTIMIST_MONGO_URL:-mongodb://optimist_mongodb_2:27017}
      HASH_TYPE: poseidon
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      IS_CHALLENGER: ${IS_CHALLENGER:-false}
      TRANSACTIONS_PER_BLOCK: ${TRANSACTIONS_PER_BLOCK:-2}
      OPTIMIST_PORT: 9093
      OPTIMIST_WS_PORT: 9092
    command: ['npm', 'run', 'dev']

  optimist_mongodb_1:
    image: mongo:4.4.1-bionic
    hostname: optimist_mongodb_1
    container_name: optimist_mongodb_1
    ports:
      - 27019:27017
    command: --quiet
    networks:
      - nightfall_network
    volumes:
      - type: volume
        source: optimist_mongodb_1
        target: /data/db

  optimist_mongodb_2:
    image: mongo:4.4.1-bionic
    hostname: optimist_mongodb_2
    container_name: optimist_mongodb_2
    ports:
      - 27020:27017
    command: --quiet
    networks:
      - nightfall_network
    volumes:
      - type: volume
        source: optimist_mongodb_2
        target: /data/db

  proposer_1:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    build:
      dockerfile: docker/proposer.Dockerfile
      context: ..
    container_name: proposer_1
    depends_on:
      - proposer_optimist_1
    ports:
      # to use with postman and etc
      - 8092:8092
    environment:
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST:-host.docker.internal}
      BLOCKCHAIN_PORT: 8546
      ENABLE_QUEUE: 1
      OPTIMIST_HOST: proposer_optimist_1
      OPTIMIST_PORT: 80
      OPTIMIST_WS_PORT: 8080
      CLIENT_HOST: client
      CLIENT_PORT: 8080
      PROPOSER_HOST: proposer_1
      PROPOSER_PORT: 8092
      PROPOSER_KEY: '0x4775af73d6dc84a0ae76f8726bda4b9ecf187c377229cb39e1afa7a18236a69d'
    networks:
      - nightfall_network
    volumes:
      - type: bind
        source: ../apps/proposer/src
        target: /app/src

  proposer_2:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    build:
      dockerfile: docker/proposer.Dockerfile
      context: ..
    container_name: proposer_2
    depends_on:
      - proposer_optimist_2
    ports:
      # to use with postman and etc
      - 8093:8093
    environment:
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST:-host.docker.internal}
      BLOCKCHAIN_PORT: 8546
      ENABLE_QUEUE: 1
      OPTIMIST_HOST: proposer_optimist_2
      OPTIMIST_PORT: 80
      OPTIMIST_WS_PORT: 8080
      CLIENT_HOST: client
      CLIENT_PORT: 8080
      PROPOSER_HOST: proposer_2
      PROPOSER_PORT: 8093
      PROPOSER_KEY: '0xabf4ed9f30bd1e4a290310d726c7bbdf39cd75a25eebd9a3a4874e10b4a0c4ce'
    networks:
      - nightfall_network
    volumes:
      - type: bind
        source: ../apps/proposer/src
        target: /app/src

volumes:
  optimist_mongodb_1:
  optimist_mongodb_2:
  build:
networks:
  nightfall_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1
