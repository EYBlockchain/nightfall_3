version: '3.5'
services:
  # the services 'administrator', 'client' & 'worker' are added here for sharing the filesystem volume.
  administrator:
    image: ghcr.io/eyblockchain/nightfall3-administrator:latest
    build:
      dockerfile: docker/admin.Dockerfile
      context: ..
    networks:
      - nightfall_network
    depends_on:
      - mongodb
    volumes:
      - ./volumes/build:/app/build/
    environment:
      BLOCKCHAIN_URL: ${BLOCKCHAIN_URL:?BLOCKCHAIN_URL-cannot-be-blank}
      ENVIRONMENT: ${ENVIRONMENT:?ENVIRONMENT-cannot-be-blank}
      ETH_NETWORK: ${ETH_NETWORK:?ETH_NETWORK-cannot-be-blank}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      MONGO_URL: ${ADMIN_MONGO_URL:-mongodb://mongodb:27017}

  client:
    image: ghcr.io/eyblockchain/nightfall3-client:latest
    build:
      dockerfile: docker/client.Dockerfile
      context: ..
    volumes:
      - ./volumes/build:/app/build/
    networks:
      - nightfall_network
    ports:
      - 8080:80
    depends_on:
      - worker
      - rabbitmq
      - mongodb
    environment:
      AUTOSTART_RETRIES: ${AUTOSTART_RETRIES:-600}
      BLOCKCHAIN_URL: ${BLOCKCHAIN_URL:?BLOCKCHAIN_URL-cannot-be-blank}
      CIRCOM_WORKER_HOST: ${CIRCOM_WORKER_HOST:-worker}
      ENABLE_QUEUE: ${ENABLE_QUEUE:-1}
      ENVIRONMENT: ${ENVIRONMENT:?ENVIRONMENT-cannot-be-blank}
      ETH_ADDRESS: ${ETH_ADDRESS:?ETH_ADDRESS-cannot-be-blank}
      ETH_PRIVATE_KEY: ${ETH_PRIVATE_KEY:?ETH_PRIVATE_KEY-cannot-be-blank}
      ETH_NETWORK: ${ETH_NETWORK:?ETH_NETWORK-cannot-be-blank}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED:-true}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA:-false}
      MONGO_URL: ${CLIENT_MONGO_URL:-mongodb://mongodb:27017}
      OPTIMIST_HOST: ${OPTIMIST_HOST:-optimist}
      OPTIMIST_PORT: ${OPTIMIST_PORT:-80}
      RABBITMQ_HOST: ${RABBITMQ_HOST:-amqp://rabbitmq}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      STATE_GENESIS_BLOCK: ${STATE_GENESIS_BLOCK:-0}
      USE_EXTERNAL_NODE: ${USE_EXTERNAL_NODE}
      GAS_ESTIMATE_ENDPOINT: ${GAS_ESTIMATE_ENDPOINT}
    command: ['npm', 'run', 'start']

  deployer:
    image: ghcr.io/eyblockchain/nightfall3-deployer:latest
    build:
      dockerfile: docker/deployer.Dockerfile
      context: ..
    depends_on:
      - worker
    networks:
      - nightfall_network
    volumes:
      - ./volumes/build:/app/build/
    environment:
      ALWAYS_DO_TRUSTED_SETUP: ${ALWAYS_DO_TRUSTED_SETUP}
      ENVIRONMENT: ${ENVIRONMENT:?ENVIRONMENT-cannot-be-blank}
      BLOCKCHAIN_URL: ${BLOCKCHAIN_URL:?BLOCKCHAIN_URL-cannot-be-blank}
      CIRCOM_WORKER_HOST: ${CIRCOM_WORKER_HOST:-worker}
      DEPLOY_MOCK_TOKENS: ${DEPLOY_MOCK_TOKENS?DEPLOY_MOCK_TOKENS-not-set}
      DEPLOY_MOCKED_SANCTIONS_CONTRACT: ${DEPLOY_MOCKED_SANCTIONS_CONTRACT:?DEPLOY_MOCKED_SANCTIONS_CONTRACT-cannot-be-blank}
      ETH_ADDRESS: ${ETH_ADDRESS:?ETH_ADDRESS-cannot-be-blank}
      ETH_PRIVATE_KEY: ${ETH_PRIVATE_KEY:?ETH_PRIVATE_KEY-cannot-be-blank}
      ETH_NETWORK: ${ETH_NETWORK:?ETH_NETWORK-cannot-be-blank}
      FEE_L2_TOKEN_ID: ${FEE_L2_TOKEN_ID:?FEE_L2_TOKEN_ID-cannot-be-blank}
      GAS: ${GAS}
      GAS_PRICE: ${GAS_PRICE}
      MULTISIG_APPROVERS: ${MULTISIG_APPROVERS?MULTISIG_APPROVERS-not-set}
      MULTISIG_SIGNATURE_THRESHOLD: ${MULTISIG_SIGNATURE_THRESHOLD:?MULTISIG_SIGNATURE_THRESHOLD-cannot-be-blank}
      SKIP_DEPLOYMENT: ${SKIP_DEPLOYMENT:-'false'}
      WHITELISTING: ${WHITELISTING?WHITELISTING-not-set}
      UPGRADE: ${UPGRADE_CONTRACTS}
      GAS_ESTIMATE_ENDPOINT: ${GAS_ESTIMATE_ENDPOINT}

  mongodb:
    image: mongo:4.4.1-bionic
    hostname: mongodb
    ports:
      - 27017:27017
    networks:
      - nightfall_network
    command: --quiet
    volumes:
      - type: volume
        source: mongodb
        target: /data/db

  rabbitmq:
    image: rabbitmq
    ports:
      - '15674:15674'
      - '5672:5672'
    networks:
      - nightfall_network

  optimist:
    image: ghcr.io/eyblockchain/nightfall3-optimist:latest
    build:
      dockerfile: docker/optimist.Dockerfile
      context: ..
    depends_on:
      - mongodb
    networks:
      - nightfall_network
    ports:
      - 8081:80
      - 8082:8080
    volumes:
      - ./volumes/build:/app/build/
    environment:
      AUTOSTART_RETRIES: ${AUTOSTART_RETRIES:-600}
      BLOCKCHAIN_URL: ${BLOCKCHAIN_URL:?BLOCKCHAIN_URL-cannot-be-blank}
      ENVIRONMENT: ${ENVIRONMENT:?ENVIRONMENT-cannot-be-blank}
      HASH_TYPE: poseidon
      IS_CHALLENGER: 'false'
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED:-true}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA:-false}
      MAX_BLOCK_SIZE: ${MAX_BLOCK_SIZE:-50000}
      MONGO_URL: ${OPTIMIST_MONGO_URL:-mongodb://mongodb:27017}
      PROPOSER_MAX_BLOCK_PERIOD_MILIS: ${PROPOSER_MAX_BLOCK_PERIOD_MILIS:-0}
      USE_EXTERNAL_NODE: ${USE_EXTERNAL_NODE}
      WEBSOCKET_PORT: 8080
      GAS_ESTIMATE_ENDPOINT: ${GAS_ESTIMATE_ENDPOINT}
    command: ['npm', 'run', 'start']

  worker:
    image: ghcr.io/eyblockchain/nightfall3-worker:latest
    build:
      dockerfile: docker/worker.Dockerfile
      context: ..
    volumes:
      - ./volumes/proving_files:/app/output/
    depends_on:
      - rabbitmq
    networks:
      - nightfall_network
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-localhost}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED:-true}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA:-false}
    command: ['npm', 'run', 'start']

volumes:
  mongodb:
networks:
  nightfall_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1
