version: '3.5'
# Use this script for making an adversary service
services:
  lazy-optimist:
    build:
      dockerfile: docker/optimist.Dockerfile
      context: ..
    depends_on:
      - mongodb-adversary
    networks:
      - nightfall_network
    ports:
      - 8088:80
      # websocket port for adversary is on localhost:8082
      - 8089:8080
    volumes:
      - type: volume
        source: build
        target: /app/build/
      - type: bind
        source: ../test/adversary/lazy-optimist/src
        target: /app/src
      - type: bind
        source: ../common-files
        target: /common-files
      - type: bind
        source: ../config/default.js
        target: /app/config/default.js
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      WEBSOCKET_PORT: ${WEBSOCKET_PORT}
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT}
      PROPOSER_MAX_BLOCK_PERIOD_MILIS: ${PROPOSER_MAX_BLOCK_PERIOD_MILIS}
      MAX_BLOCK_SIZE: ${MAX_BLOCK_SIZE}
      MONGO_URL: ${MONGO_URL}
      HASH_TYPE: ${HASH_TYPE}
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA}
      IS_CHALLENGER: ${IS_CHALLENGER}
      AUTOSTART_RETRIES: ${AUTOSTART_RETRIES}
    command: ['npm', 'run', 'dev']

  bad-client:
    build:
      dockerfile: docker/client.Dockerfile
      context: ..
    depends_on:
      - mongodb-adversary
    networks:
      - nightfall_network
    ports:
      - 8093:80
      # websocket port for adversary is on localhost:8082
      - 8094:8080
    volumes:
      - type: volume
        source: build
        target: /app/build/
      - type: bind
        source: ../test/adversary/bad-client/src
        target: /app/src
      - type: bind
        source: ../common-files
        target: /common-files
      - type: bind
        source: ../config/default.js
        target: /app/config/default.js
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA}
      CIRCOM_WORKER_HOST: ${CIRCOM_WORKER_HOST}
      OPTIMIST_HOST: ${OPTIMIST_HOST}
      OPTIMIST_PORT: ${OPTIMIST_PORT}
      MONGO_URL: ${MONGO_URL}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      ENABLE_QUEUE: ${ENABLE_QUEUE}
      USE_EXTERNAL_NODE: ${USE_EXTERNAL_NODE}
      AUTOSTART_RETRIES: ${AUTOSTART_RETRIES}
      ETH_NETWORK: ${ETH_NETWORK}
      CONTRACT_FILES_URL: ${CONTRACT_FILES_URL}
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT}

    command: ['npm', 'run', 'dev']

  mongodb-adversary:
    image: mongo:4.4.1-bionic
    hostname: mongodb-adversary
    # ports:
    #   - 27018:27017
    networks:
      - nightfall_network
    volumes:
      - type: volume
        source: mongodb-adversary-db
        target: /data/db

volumes:
  mongodb-adversary-db:
