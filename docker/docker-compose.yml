version: '3.5'
# Use this script for running up nightfall_3 in 'developer' mode with local
# bindings.  See the readme for more information.
services:
  administrator:
    image: ghcr.io/eyblockchain/nightfall3-administrator:latest
    networks:
      - nightfall_network
    depends_on:
      - mongodb
    volumes:
      - type: volume
        source: build
        target: /app/build/
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-local}
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST:-blockchain}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT:-8546}
      LOG_LEVEL: ${LOG_LEVEL:-error}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED:-true}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA:-false}
      ETH_NETWORK: ${ETH_NETWORK:-blockchain}
      MONGO_URL: ${ADMIN_MONGO_URL:-mongodb://mongodb:27017}

  client:
    image: ghcr.io/eyblockchain/nightfall3-client:latest
    volumes:
      - type: volume
        source: build
        target: /app/build
    networks:
      - nightfall_network
    ports:
      - 8080:80
    depends_on:
      - deployer
      - worker
      - rabbitmq
      - mongodb
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-local}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED:-true}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA:-false}
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST:-blockchain}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT:-8546}
      ZOKRATES_WORKER_HOST: ${ZOKRATES_WORKER_HOST:-worker}
      RABBITMQ_HOST: ${RABBITMQ_HOST:-amqp://rabbitmq}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      ENABLE_QUEUE: ${ENABLE_QUEUE:-1}
      OPTIMIST_HOST: ${OPTIMIST_HOST:-optimist}
      OPTIMIST_PORT: ${OPTIMIST_PORT:-80}
      MONGO_URL: ${CLIENT_MONGO_URL:-mongodb://mongodb:27017}
      USE_STUBS: ${USE_STUBS:-false} # make sure this flag is the same as in deployer service
    command: ['npm', 'run', 'dev']

    # Temporary container to deploy contracts and circuits and populate volumes
  deployer:
    image: ghcr.io/eyblockchain/nightfall3-deployer:latest
    volumes:
      - type: volume
        source: build
        target: /app/build/
    networks:
      - nightfall_network
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-local}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED:-true}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA:-false}
      # ETH_NETWORK sets the network selected by Truffle from truffle-config.js
      # startup routines will wait for a blockchain client to be reachable on this network
      ETH_NETWORK: ${ETH_NETWORK:-blockchain}
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST:-blockchain}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT:-8546}
      ZOKRATES_WORKER_HOST: ${ZOKRATES_WORKER_HOST:-worker}
      USE_STUBS: ${USE_STUBS:-false}
      WHITELISTING: ${WHITELISTING}
      ALWAYS_DO_TRUSTED_SETUP: ${ALWAYS_DO_TRUSTED_SETUP}

  hosted-utils-api-server:
    build:
      context: ../hosted-utils-api-server
    depends_on:
      - worker
    ports:
      - 8087:80
    volumes:
      - type: volume
        source: proving_files
        target: /app/public/

  optimist:
    image: ghcr.io/eyblockchain/nightfall3-optimist:latest
    depends_on:
      - mongodb
    networks:
      - nightfall_network
    ports:
      - 8081:80
      # websocket port for Optimist is on localhost:8082
      - 8082:8080
    volumes:
      - type: volume
        source: build
        target: /app/build/
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-local}
      WEBSOCKET_PORT: 8080
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST:-blockchain}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT:-8546}
      MONGO_URL: ${OPTIMIST_MONGO_URL:-mongodb://mongodb:27017}
      HASH_TYPE: poseidon
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED:-true}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA:-false}
      IS_CHALLENGER: ${IS_CHALLENGER:-true}
      TRANSACTIONS_PER_BLOCK: ${TRANSACTIONS_PER_BLOCK:-2}
    command: ['npm', 'run', 'dev']

  rabbitmq:
    image: rabbitmq
    ports:
      - '15674:15674'
      - '5672:5672'
    networks:
      - nightfall_network

  mongodb:
    image: mongo:4.4.1-bionic
    hostname: mongodb
    ports:
      - 27017:27017
    networks:
      - nightfall_network
    command: --quiet
    volumes:
      - type: volume
        source: mongodb
        target: /data/db

  worker:
    image: ghcr.io/eyblockchain/nightfall3-worker:latest
    volumes:
      - type: volume
        source: proving_files
        target: /app/output/
    depends_on:
      - deployer
      - rabbitmq
    networks:
      - nightfall_network
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-local}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED:-true}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA:-false}
      MPC: ${MPC}

volumes:
  mongodb:
  proving_files:
  build:
networks:
  nightfall_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1
