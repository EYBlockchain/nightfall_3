version: '3.5'
# Use this script for running up nightfall_3 in 'developer' mode with local
# bindings.  See the readme for more information.
services:
  administrator:
    image: ghcr.io/eyblockchain/nightfall3-administrator:latest
    networks:
      - nightfall_network
    depends_on:
      - mongodb
    volumes:
      - type: volume
        source: build
        target: /app/build/
    environment:
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST:-blockchain}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT:-8546}
      CONTRACT_ARTIFACTS: ${CONTRACT_ARTIFACTS}
      ENVIRONMENT: ${ENVIRONMENT:-localhost}
      ETH_NETWORK: ${ETH_NETWORK:-blockchain}
      LOG_LEVEL: ${LOG_LEVEL:-error}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED:-true}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA:-false}
      MONGO_URL: ${ADMIN_MONGO_URL:-mongodb://mongodb:27017}

  client:
    image: ghcr.io/eyblockchain/nightfall3-client:latest
    volumes:
      - type: volume
        source: build
        target: /app/build
    networks:
      - nightfall_network
    ports:
      - 8080:80
    depends_on:
      - worker
      - rabbitmq
      - mongodb
    environment:
      AUTHENTICATION_KEY: ${AUTHENTICATION_KEY}
      AUTOSTART_RETRIES: ${AUTOSTART_RETRIES:-600}
      BLOCKCHAIN_URL: ${BLOCKCHAIN_URL} 
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST:-blockchain}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT:-8546}
      CIRCOM_WORKER_HOST: ${CIRCOM_WORKER_HOST:-worker}
      CONTRACT_FILES_URL: ${CONTRACT_FILES_URL}
      ENDPOINTS_WHITELISTED: ${ENDPOINTS_WHITELISTED}
      ENABLE_QUEUE: ${ENABLE_QUEUE:-1}
      ENVIRONMENT: ${ENVIRONMENT:-localhost}
      GAS_ESTIMATE_ENDPOINT: ${GAS_ESTIMATE_ENDPOINT}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED:-true}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA:-false}
      MONGO_URL: ${CLIENT_MONGO_URL:-mongodb://mongodb:27017}
      NODE_ENV: ${NODE_ENV}
      RABBITMQ_HOST: ${RABBITMQ_HOST:-amqp://rabbitmq}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      STATE_GENESIS_BLOCK: ${STATE_GENESIS_BLOCK:-0}
      USE_EXTERNAL_NODE: ${USE_EXTERNAL_NODE}
    command: ['npm', 'run', 'start']

    # Temporary container to deploy contracts and circuits and populate volumes
  deployer:
    image: ghcr.io/eyblockchain/nightfall3-deployer:latest
    volumes:
      - type: volume
        source: build
        target: /app/build/
      - type: volume
        source: .openzeppelin
        target: /app/.openzeppelin/
    depends_on:
      - worker
    networks:
      - nightfall_network
    environment:
      ALWAYS_DO_TRUSTED_SETUP: ${ALWAYS_DO_TRUSTED_SETUP}
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST:-blockchain}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT:-8546}
      BLOCKCHAIN_URL: ${BLOCKCHAIN_URL:- ws://blockchain:8546}
      CIRCOM_WORKER_HOST: ${CIRCOM_WORKER_HOST:-worker}
      DEPLOY_MOCK_TOKENS: ${DEPLOY_MOCK_TOKENS:-false}
      DEPLOY_MOCKED_SANCTIONS_CONTRACT: ${DEPLOY_MOCKED_SANCTIONS_CONTRACT:-false}
      ENVIRONMENT: ${ENVIRONMENT:-localhost}
      # ETH_NETWORK sets the network selected by Truffle from truffle-config.js
      # startup routines will wait for a blockchain client to be reachable on this network
      ETH_NETWORK: ${ETH_NETWORK:-blockchain}
      ETH_PRIVATE_KEY: ${ETH_PRIVATE_KEY}
      ETH_ADDRESS: ${ETH_ADDRESS}
      FEE_L2_TOKEN_ID: ${FEE_L2_TOKEN_ID:-MATIC}
      GAS: ${GAS}
      GAS_PRICE: ${GAS_PRICE}
      ERC20MOCK_RESTRICT: ${ERC20MOCK_RESTRICT}
      DAI_RESTRICT: ${DAI_RESTRICT}
      GAS_ESTIMATE_ENDPOINT: ${GAS_ESTIMATE_ENDPOINT}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      MULTISIG_APPROVERS: ${MULTISIG_APPROVERS}
      MULTISIG_SIGNATURE_THRESHOLD: ${MULTISIG_SIGNATURE_THRESHOLD}
      MATIC_RESTRICT: ${MATIC_RESTRICT}
      SKIP_DEPLOYMENT: ${SKIP_DEPLOYMENT:-false}
      USDC_RESTRICT: ${USDC_RESTRICT}
      UPGRADE: ${UPGRADE_CONTRACTS}
      WHITELISTING: ${WHITELISTING}
      WETH_RESTRICT: ${WETH_RESTRICT}

  hosted-utils-api-server:
    build:
      dockerfile: docker/hosted-utils-api-server.Dockerfile
      context: ..
    image: ghcr.io/eyblockchain/nightfall3-hosted-utils-api-server:latest
    depends_on:
      worker:
        condition: service_started
      deployer:
        condition: service_completed_successfully
    ports:
      - 8087:80
    volumes:
      - type: volume
        source: proving_files
        target: /app/public/

  optimist:
    image: ghcr.io/eyblockchain/nightfall3-optimist:latest
    depends_on:
      - mongodb
    networks:
      - nightfall_network
    ports:
      - 8081:80
      # websocket port for Optimist is on localhost:8082
      - 8082:8080
    volumes:
      - type: volume
        source: build
        target: /app/build/
    environment:
      AUTOSTART_RETRIES: ${AUTOSTART_RETRIES:-1000}
      BLOCKCHAIN_URL: ${BLOCKCHAIN_URL}
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST:-blockchain}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT:-8546}
      CONTRACT_FILES_URL: ${CONTRACT_FILES_URL}
      ENVIRONMENT: ${ENVIRONMENT:-localhost}
      HASH_TYPE: poseidon
      IS_CHALLENGER: ${IS_CHALLENGER:-true}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED:-true}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA:-false}
      MAX_BLOCK_SIZE: ${MAX_BLOCK_SIZE:-50000}
      MONGO_URL: ${OPTIMIST_MONGO_URL:-mongodb://mongodb:27017}
      NODE_ENV: ${NODE_ENV}
      PROPOSER_MAX_BLOCK_PERIOD_MILIS: ${PROPOSER_MAX_BLOCK_PERIOD_MILIS:-0}
      USE_EXTERNAL_NODE: ${USE_EXTERNAL_NODE}
      WEBSOCKET_PORT: ${WEBSOCKET_PORT:-8080}
    command: ['npm', 'run', 'start']

  rabbitmq:
    image: rabbitmq
    ports:
      - '15674:15674'
      - '5672:5672'
    networks:
      - nightfall_network

  mongodb:
    image: mongo:4.4.1-bionic
    hostname: mongodb
    ports:
      - 27017:27017
    networks:
      - nightfall_network
    command: --quiet
    volumes:
      - type: volume
        source: mongodb
        target: /data/db

  worker:
    image: ghcr.io/eyblockchain/nightfall3-worker:latest
    volumes:
      - type: volume
        source: proving_files
        target: /app/output/
    depends_on:
      - rabbitmq
    networks:
      - nightfall_network
    environment:
      CIRCUIT_FILES_URL: ${CIRCUIT_FILES_URL}
      ENVIRONMENT: ${ENVIRONMENT:-localhost}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_HTTP_PAYLOAD_ENABLED: ${LOG_HTTP_PAYLOAD_ENABLED:-true}
      LOG_HTTP_FULL_DATA: ${LOG_HTTP_FULL_DATA:-false}
      NODE_ENV: ${NODE_ENV}
    entrypoint: ['npm', 'run', 'start']

volumes:
  mongodb:
  proving_files:
  build:
  .openzeppelin:
networks:
  nightfall_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1
