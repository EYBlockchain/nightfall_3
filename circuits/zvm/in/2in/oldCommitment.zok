from "../../../common/hashes/mimc/bls12-377/mimc2.zok" import main as mimc2

from "../../oldCommitment.zok" import OldCommitmentData as OldCommitmentData
from "../../oldCommitment.zok" import calcCommitmentRoot as calcCommitmentRoot

// Ensure each oldCommitment actually contains its purported parentVK.
// Check all oldCommitments exist within the commitment tree.
// @param {OldCOmmitment[2]} oldCommitments - the commitments being nullified
// @return {field} commitmentRoot - the root of the commitment tree
def checkOldCommitments(OldCommitmentData[2] oldCommitments) -> (field):

    // Check that the oldCommitments' outerNullifiers actually contain the purported parentVKs:
    for field i in 0..2 do
        oldCommitments[i].outerNullifier == mimc2([\
            oldCommitments[i].parentVKID,\
            oldCommitments[i].innerNullifier\
        ])
    endfor

    // Check that the oldCommitments' outerCommitments actually contain the purported parentVKs:
    for field i in 0..2 do
        oldCommitments[i].outerCommitment == mimc2([\
            oldCommitments[i].parentVKID,\
            oldCommitments[i].innerCommitment\
        ])
    endfor

    // Check that the oldCommitments exist in the commitment tree:
    field commitmentRoot = calcCommitmentRoot(oldCommitments[0])
    // Repeat the check for all other oldCommitments:
    for field i in 1..2 do
        commitmentRoot == calcCommitmentRoot(oldCommitments[i])
    endfor

    return commitmentRoot
