# ================================================================================
# [Shared Settings]

# Services to be started during the deployment
# Leaving it blank will default to 'deployer, worker'
# Options are: administrator, client, deployer, optimist, worker
export DEPLOYMENT_SERVICES=

# The network name defined for this deployment
# Information related to this network is present in config/default.js. See the README.md for additional details
export ETH_NETWORK=mumbai

# The Ethereum address to be used during the deployment
export ETH_ADDRESS=0x9C8B2276D490141Ae1440Da660E470E7C0349C63

# The private key related to the Ethereum address set in ETH_ADDRESS
export ETH_PRIVATE_KEY=4775af73d6dc84a0ae76f8726bda4b9ecf187c377229cb39e1afa7a18236a69e

# the blockchain the services will connect to
export BLOCKCHAIN_URL=wss://ws-matic-mumbai.chainstacklabs.com

# Sets the default gas value
# Leaving it blank will fallback to the defined default
# Default value: 8000000
export GAS=9000000

# Sets the default gas price
# Leaving it blank will fallback to the defined default
# Default value: 20000000000
export GAS_PRICE=

# Text free variable indicating the environment name
export ENVIRONMENT=mumbai

# Log level
export LOG_LEVEL=debug

# If the logging of HTTP payload is enabled
export LOG_HTTP_PAYLOAD_ENABLED=

# If the HTTP full data payload should be logged
export LOG_HTTP_FULL_DATA=

# Number of retries the app will try to get the contract info before giving up
# Default value: 600
export AUTOSTART_RETRIES=10000

# Used by the client & deployer services - defines the 'worker' host. 
# Leave it blank to get the one started in the docker-compose
export CIRCOM_WORKER_HOST=

# Used by the client & optimist services
# Set to 'true' so that client will not wait for the blockchain to initialize
export USE_EXTERNAL_NODE=true


# ================================================================================
# [Administrator]

# MongoDB database connection string
# Leaving it blank will make the app connect to the mongodb started by the docker-compose
export ADMIN_MONGO_URL=


# ================================================================================
# [Client]

# MongoDB database connection string
# Leaving it blank will make the app connect to the mongodb started by the docker-compose
export CLIENT_MONGO_URL=

# Optimist host the client will connect to
# Leaving it blank will make the app connect to the mongodb started by the docker-compose
export OPTIMIST_HOST=
export OPTIMIST_PORT=

# If the queue should be enabled
# Leaving it blank will make the apps to connect to the RabbitMQ instance
export ENABLE_QUEUE=

# RabbitMQ host the client will connect to
# Leaving it blank will make the app connect to the mongodb started by the docker-compose
export RABBITMQ_HOST=
export RABBITMQ_PORT=


# ================================================================================
# [Deployer]

# Set to 'enable' to enable the KYC process
export WHITELISTING=

# When set to anything different of 'false', deploys the mocks Smart Contract and send funds to some contracts and users (for Testing)
export DEPLOY_MOCK_TOKENS=

# Nightfall verifies if the sender address is sanctioned when submitting a transaction. 
# If set to 'true', it will deploy  
# Required!
export DEPLOY_MOCKED_SANCTIONS_CONTRACT=true

# If for some reason the contracts deployment went well, but the cirtuits didn't finish well, set to 'true' to skip the contracts' deployment
export SKIP_DEPLOYMENT=false

# If the Trusted Setup should always run during the deployment
export ALWAYS_DO_TRUSTED_SETUP=

# If the deploymet to run will upgrade contracts 
export UPGRADE_CONTRACTS=

# The number of Approvers required to authorise `onlyOwner` transactions. See nightfall-administrator/README.md.
# Required
export MULTISIG_SIGNATURE_THRESHOLD=2

# A comma separated Ethereum addresses list of the approvers
# Leave it blank if no approvers are needed
export MULTISIG_APPROVERS=0x9C8B2276D490141Ae1440Da660E470E7C0349C63,0xfeEDA3882Dd44aeb394caEEf941386E7ed88e0E0,0xfCb059A4dB5B961d3e48706fAC91a55Bad0035C9,0x4789FD18D5d71982045d85d5218493fD69F55AC4,0xb9e9997dF5b3ac021AB3B29C64F3c339A2546816
