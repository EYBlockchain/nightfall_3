version: '3.5'
# Use this script to deploy nightfall_3 to dev, staging or prod
#
services:
  optimist:
    image: ghcr.io/eyblockchain/nightfall3-optimist:latest
    build:
      dockerfile: optimist.Dockerfile
      context: ./
    networks:
      - pong_network
    volumes:
      - type: volume
        source: build
        target: /app/build/
    environment:
      WEBSOCKET_PORT: 8080
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT}
      HASH_TYPE: mimc
      LOG_LEVEL: debug
      IS_CHALLENGER: 'true'
      TRANSACTIONS_PER_BLOCK: ${TRANSACTIONS_PER_BLOCK}
      AUTOSTART_RETRIES: ${AUTOSTART_RETRIES}

    command: ['npm', 'run', 'dev']

  # Temporary container to deploy contracts and circuits and populate volumes
  deployer:
    image: ghcr.io/eyblockchain/nightfall3-deployer:latest
    build:
      dockerfile: deployer.Dockerfile
      context: ./
    depends_on:
      - worker
    volumes:
      - type: volume
        source: build
        target: /app/build/
    networks:
      - pong_network
    environment:
      LOG_LEVEL: debug
      # ETH_NETWORK sets the network selected by Truffle from truffle-config.js
      # startup routines will wait for a blockchain client to be reachable on this network
      ETH_NETWORK: ${ETH_NETWORK}
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT}
      ZOKRATES_WORKER_HOST: worker
      USE_STUBS: 'false'
      ETH_PRIVATE_KEY: ${ETH_PRIVATE_KEY}
      ETH_ADDRESS: ${ETH_ADDRESS}
      GAS_PRICE: 20000000000
      # This is only needed for test purposes - it gives tokens to the user at startup
      #USER_ETHEREUM_ADDRESSES: 0xE35B7c8338E4B952C03E73B50f454B1df086fef2,0x4637Ee1126723e098A152f33F326fb767A6A2b8A


  worker:
    image: ghcr.io/eyblockchain/nightfall3-worker:latest
    build:
      dockerfile: worker.Dockerfile
      context: ./
    volumes:
      - type: volume
        source: proving_files
        target: /app/output/
    networks:
      - pong_network
    environment:
      LOG_LEVEL: info

  proposer:
    image: ghcr.io/eyblockchain/nightfall3-proposer:latest
    build:
      dockerfile: proposer.Dockerfile
      context: ./
    networks:
      - pong_network
    environment:
      OPTIMIST_HOST: optimist
      OPTIMIST_WS_PORT: 8080
      OPTIMIST_HTTP_PORT: 80
      CLIENT_HOST: client
      CLIENT_PORT: 80
      BLOCKCHAIN_WS_HOST: ${BLOCKCHAIN_WS_HOST}
      BLOCKCHAIN_PORT: ${BLOCKCHAIN_PORT}
      PROPOSER_ETHEREUM_SIGNING_KEY: ${PROPOSER_ETHEREUM_SIGNING_KEY}

volumes:
  mongodb:
  proving_files:
  build:

networks:
  pong_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.239.0/24
          gateway: 172.16.239.1
