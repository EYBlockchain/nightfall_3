import path from 'path';
import circomTester from 'circom_tester';
import { fileURLToPath } from 'url';
// import { generalise } from 'general-number';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const tester = circomTester.wasm;
// const { expect } = chai;

describe('Test tokenise circuit', function () {
  this.timeout(60000);
  const circuitPath = path.join(__dirname, '../../../nightfall-deployer/circuits/transform.circom');
  let circuit;
  let witnessInput;

  before(async () => {
    circuit = await tester(circuitPath, { reduceConstraints: false });
    await circuit.loadConstraints();
    console.log(`Constraints: ${circuit.constraints.length}\n`);

    witnessInput = {
      value: '0',
      fee: '1',
      circuitHash: '18421459695',
      tokenType: '0',
      historicRootBlockNumberL2: ['5', '0', '0', '0', '5', '0'],
      ercAddress: '0',
      tokenId: ['0', '0', '0', '0', '0', '0', '0', '0'],
      recipientAddress: '0',
      commitments: [
        '8830352914120414597399906790187891311595422686619897488568649785501298780858',
        '5448141998671177579534023703512975546140778238306267487661457041735036782623',
        '0',
        '0',
        '5813214796063601082976180545843718263459523771692775413350838725533908524709',
      ],
      nullifiers: [
        '13544300515832521134978897178425634253246236534423278882063902464023966368433',
        '0',
        '0',
        '0',
        '5991116713236771994566866630969534371632770886775961903204536036720530509370',
        '0',
      ],
      compressedSecrets: ['0', '0'],
      roots: [
        '926434040504744083531778544247976033205063351691876861640552249718863227606',
        '0',
        '0',
        '0',
        '926434040504744083531778544247976033205063351691876861640552249718863227606',
        '0',
      ],
      feeAddress: '1319533947831612348694315757168650042041713553662',
      rootKey: '2279923558995011751611063584918713773156544989985830828459384641106187332209',
      nullifiersValues: ['5', '0', '0', '0', '9', '0'],
      nullifiersSalts: [
        '376747991268339911015175036030181565171459403002643485334800144557523960799',
        '0',
        '0',
        '0',
        '3296095291179341039727472454574689993175661864907487456557545921575240243883',
        '0',
      ],
      paths: [
        [
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '16570015418042829848168542006252691018593972783810755946305605707268370028129',
          '692667750843522432234100132921682289148211955204356794293140839979481197880',
          '17878230203733660806054890870361407744378624033273059460929279222340792960077',
          '11990279958599781847929876112080194682818107360293327388752159655146410092664',
        ],
        [
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
        ],
        [
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
        ],
        [
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
        ],
        [
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '16051576888274286879570888284153507202707899641081373713611543822412582740914',
          '0',
          '0',
          '0',
        ],
        [
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
          '0',
        ],
      ],
      orders: ['7', '0', '0', '0', '8', '0'],
      commitmentsValues: ['5', '5', '0', '0', '8'],
      commitmentsSalts: [
        '376747991268339911015175036030181565171459403002643485334800144557523960799',
        '376747991268339911015175036030181565171459403002643485334800144557523960799',
        '0',
        '0',
        '19404684913175209984896888907290179351531214160362132698623321254437559243627',
      ],
      recipientPublicKey: [
        [
          '8490685904787475746369366901729727151930997402058548597274067437080179631982',
          '16019898780588040648157153023567746553375452631966740349901590026272037097498',
        ],
        [
          '8490685904787475746369366901729727151930997402058548597274067437080179631982',
          '16019898780588040648157153023567746553375452631966740349901590026272037097498',
        ],
        ['0', '0'],
        ['0', '0'],
        [
          '8490685904787475746369366901729727151930997402058548597274067437080179631982',
          '16019898780588040648157153023567746553375452631966740349901590026272037097498',
        ],
      ],
      inputPackedAddressesPrivate: [
        '21711016731996786641919559689425072923089144547200423101505672621974399230105',
        '0',
        '0',
        '0',
      ],
      inputIdRemaindersPrivate: ['1', '0', '0', '0'],
      outputPackedAddressesPrivate: [
        '21711016731996786641919559689425072923089144547200423101505672621974399230105',
        '21711016731996786641919559689425072923089144547200423101505672621974399230105',
        '0',
        '0',
      ],
      outputIdRemaindersPrivate: ['3', '4', '0', '0'],
    };
  });

  it('should verify a valid transform', async () => {
    const w = await circuit.calculateWitness(witnessInput);
    await circuit.assertOut(w, {});
  });
});
