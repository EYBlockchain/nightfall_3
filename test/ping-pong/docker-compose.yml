version: '3.5'
# Use this script for running up nightfall_3 with images and applications
services:
  client:
    image: ghcr.io/eyblockchain/nightfall3-client:latest
    volumes:
      - type: volume
        source: build
        target: /app/build
      - type: volume
        source: mongodb
        target: /app/mongodb
    networks:
      - nightfall_network
    ports:
      - 27017:27017
      - 8080:80
    depends_on:
      - worker
      - rabbitmq
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      LOG_LEVEL: debug
      BLOCKCHAIN_WS_HOST: blockchain1
      BLOCKCHAIN_PORT: 8546
      ZOKRATES_WORKER_HOST: worker
      RABBITMQ_HOST: amqp://rabbitmq
      RABBITMQ_PORT: 5672
      TIMBER_HOST: timber
      TIMBER_PORT: 80
      ENABLE_QUEUE: 1
      OPTIMIST_HOST: optimist
      OPTIMIST_PORT: 80
      USE_STUBS: 'false' # make sure this flag is the same as in deployer service
    command: ['npm', 'run', 'dev']

  rabbitmq:
    image: rabbitmq
    ports:
      - '15674:15674'
      - '5672:5672'
    networks:
      - nightfall_network

  optimist:
    image: ghcr.io/eyblockchain/nightfall3-optimist:latest
    networks:
      - nightfall_network
    ports:
      - 8081:80
      # websocket port for Optimist is on localhost:8082
      - 8082:8080
    volumes:
      - type: volume
        source: build
        target: /app/build/
    environment:
      WEBSOCKET_PORT: 8080
      BLOCKCHAIN_WS_HOST: blockchain1
      BLOCKCHAIN_PORT: 8546
      HASH_TYPE: mimc
      LOG_LEVEL: debug
      IS_CHALLENGER: 'true'
      TRANSACTIONS_PER_BLOCK: ${TRANSACTIONS_PER_BLOCK:-2}
      TIMBER_HOST: timber
      TIMBER_PORT: 80
    command: ['npm', 'run', 'dev']

  # Temporary container to deploy contracts and circuits and populate volumes
  deployer:
    image: ghcr.io/eyblockchain/nightfall3-deployer
    volumes:
      - type: volume
        source: build
        target: /app/build/
    networks:
      - nightfall_network
    environment:
      LOG_LEVEL: debug
      # ETH_NETWORK sets the network selected by Truffle from truffle-config.js
      # startup routines will wait for a blockchain client to be reachable on this network
      ETH_NETWORK: blockchain1
      BLOCKCHAIN_WS_HOST: blockchain1
      BLOCKCHAIN_PORT: 8546
      ZOKRATES_WORKER_HOST: worker
      USE_STUBS: 'false'

  worker:
    image: ghcr.io/eyblockchain/nightfall3-worker
    volumes:
      - type: volume
        source: ./proving_files
        target: /app/output/
    networks:
      - nightfall_network
    environment:
      LOG_LEVEL: info

  proposer:
    image: ghcr.io/eyblockchain/nightfall3-proposer:latest
#    build:
#      dockerfile: proposer.Dockerfile
#      context: ../../
    networks:
      - nightfall_network
#    volumes:
#      - type: bind
#        source: ../../common-files
#        target: /app/common-files
#      - type: bind
#        source: ./proposer/src
#        target: /app/test/ping-pong/proposer/src
    environment:
      OPTIMIST_HOST: optimist
      OPTIMIST_WS_PORT: 8080
      OPTIMIST_HTTP_PORT: 80
      CLIENT_HOST: client
      CLIENT_PORT: 80
      BLOCKCHAIN_WS_HOST: blockchain1
      BLOCKCHAIN_PORT: 8546

  user-local:
    image: ghcr.io/eyblockchain/nightfall3-user-local:latest
#    build:
#      dockerfile: user-local.Dockerfile
#      context: ../../
    networks:
      - nightfall_network
#    volumes:
#      - type: bind
#        source: ../../common-files
#        target: /app/common-files
#      - type: bind
#        source: ./user-local/src
#        target: /app/test/ping-pong/user-local/src
    environment:
      OPTIMIST_HOST: optimist
      OPTIMIST_WS_PORT: 8080
      OPTIMIST_HTTP_PORT: 80
      CLIENT_HOST: client
      CLIENT_PORT: 80
      BLOCKCHAIN_WS_HOST: blockchain1
      BLOCKCHAIN_PORT: 8546

volumes:
  mongodb:
  proving_files:
  build:

networks:
  nightfall_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1
