#! /bin/bash

VOLUME_LIST=$(docker volume ls -q)
FILE=

usage()
{
  echo "Usage:"
  echo "  -g or --ganache; for a ganache simulator"
  echo "  -l or --localhost; to connect to an already running blockchain on ws://localhost:8546"
  echo "  -h or --help; to print this message"
  echo "  -d or --dev; to bind mount the filesystem and use it for development"
}

# select a Geth or Ganache client
if [ -z "$1" ]; then
  usage
  exit 1
fi

# delete env file
rm -f ${ENV_FILE}
while [ -n "$1" ]; do
  case $1 in
      -g  | --ganache )             FILE="-f docker/docker-compose.yml -f docker/docker-compose.ganache.yml";
                                    ;;
      -l  | --localhost )           FILE="-f docker/docker-compose.yml -f docker/docker-compose.host.docker.internal.yml"
                                    ;;
      -e  | --edge )                FILE="-f docker/docker-compose.yml -f docker/docker-compose.polygon-edge.yml"
                                    ;;
      -h  | --help )                usage
                                    ;;
      -d  | --dev )                 DEV="-f docker/docker-compose.dev.yml"
                                    ;;
      -a  | --adversary)            ADVERSARY="-f docker/docker-compose.adversary.yml"
                                    ;;
      -n  | --nothing)              FILE="-f docker/docker-compose.yml" 
                                    NO_REMOVE='true'
                                    ;;                              
      * )                           usage
                              exit 1
    esac
  shift
done

# FILE should always be set.  Asking for -s on its own makes no sense
if [ -z "$FILE" ]; then
  usage
  exit 1
fi

# shut down cleanly in the event of a cntl-c etc. We don't want to leave containers running
trap "docker-compose $FILE $DEV $ADVERSARY -p 'nightfall_3' down --remove-orphans -t 1; exit 1" SIGHUP SIGINT SIGTERM

docker-compose -f docker/docker-compose.yml $FILE $DEV $ADVERSARY -p 'nightfall_3' down --remove-orphans

# if-else block checks - volume exist and then removes it.
if [[ $(echo $VOLUME_LIST | grep nightfall_3_mongodb) ]]; then
  echo -n 'Removing '
  docker volume rm nightfall_3_mongodb
fi

if [ -z "$NO_REMOVE" ]; then 

  if [[ $(echo $VOLUME_LIST | grep nightfall_3_mongodb2) ]]; then
    echo -n 'Removing '
    docker volume rm nightfall_3_mongodb2
  fi

  if [[ $(echo $VOLUME_LIST | grep nightfall_3_mongodb-adversary-db) ]]; then
    echo -n 'Removing '
    docker volume rm nightfall_3_mongodb-adversary-db
  fi

  if [[ $(echo $VOLUME_LIST | grep nightfall_3_build) ]]; then
    echo -n 'Removing '
    docker volume rm nightfall_3_build
  fi

  if [[ $(echo $VOLUME_LIST | grep nightfall_3_.openzeppelin) ]]; then
    echo -n 'Removing '
    docker volume rm nightfall_3_.openzeppelin
  fi

  if [[ $(echo $VOLUME_LIST | grep nightfall_3_geth1-chain) ]]; then
    echo -n 'Removing '
    docker volume rm nightfall_3_geth1-chain
  fi

  if [[ $(echo $VOLUME_LIST | grep nightfall_3_geth-miner-chain1) ]]; then
    echo -n 'Removing '
    docker volume rm nightfall_3_geth-miner-chain1
  fi

  if [[ $(echo $VOLUME_LIST | grep nightfall_3_dag1) ]]; then
    echo -n 'Removing '
    docker volume rm nightfall_3_dag1
  fi

  if [ ! -z "$DEV" ]; then
    cd common-files && npm ci && cd ..
  fi

fi

if [ -z "$NF_SERVICES_TO_LOG" ]; then
  NF_SERVICES_TO_LOG=$NF_SERVICES_TO_START
fi

docker-compose $FILE  $DEV $ADVERSARY -p 'nightfall_3' up -d --remove-orphans ${NF_SERVICES_TO_START//,/ }
docker-compose -p 'nightfall_3' $FILE $DEV $ADVERSARY logs -f ${NF_SERVICES_TO_LOG//,/ }
