version: '3.5'
# Use this script for running up nightfall_3 in 'developer' mode with local
# bindings.  See the readme for more information.
services:
  client1:
    build:
      dockerfile: Dockerfile
      context: ./nightfall-client
    volumes:
      - type: bind
        source: ./nightfall-client/src
        target: /app/src
      - type: bind
        source: ./common-files
        target: /common-files
      - type: bind
        source: ./config/default.js
        target: /app/config/default.js
      - type: volume
        source: build
        target: /app/build
      - type: volume
        source: mongodb1
        target: /app/mongodb
    networks:
      - nightfall_network
    ports:
      - 27017:27017
      - 8080:80
    depends_on:
      - deployer
      - worker
      - rabbitmq1
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      LOG_LEVEL: debug
      BLOCKCHAIN_WS_HOST: blockchain1
      BLOCKCHAIN_PORT: 8546
      ZOKRATES_WORKER_HOST: worker
      RABBITMQ_HOST: amqp://rabbitmq1
      RABBITMQ_PORT: 5672
      ENABLE_QUEUE: 1
      OPTIMIST_HOST: optimist1
      OPTIMIST_PORT: 80
      USE_STUBS: 'false' # make sure this flag is the same as in deployer service
    command: ['npm', 'run', 'dev']

  client2:
    build:
      dockerfile: Dockerfile
      context: ./nightfall-client
    volumes:
      - type: bind
        source: ./nightfall-client/src
        target: /app/src
      - type: bind
        source: ./common-files
        target: /common-files
      - type: bind
        source: ./config/default.js
        target: /app/config/default.js
      - type: volume
        source: build
        target: /app/build
      - type: volume
        source: mongodb2
        target: /app/mongodb
    networks:
      - nightfall_network
    ports:
      - 27018:27017
      - 8084:80
    depends_on:
      - deployer
      - worker
      - rabbitmq2
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      LOG_LEVEL: error
      BLOCKCHAIN_WS_HOST: blockchain1
      BLOCKCHAIN_PORT: 8546
      ZOKRATES_WORKER_HOST: worker
      RABBITMQ_HOST: amqp://rabbitmq2
      RABBITMQ_PORT: 5672
      ENABLE_QUEUE: 1
      OPTIMIST_HOST: optimist2
      OPTIMIST_PORT: 80
      USE_STUBS: 'false' # make sure this flag is the same as in deployer service
    command: ['npm', 'run', 'dev']

  worker:
    #  image: 3800decac71d
    build:
      dockerfile: Dockerfile
      context: ./zokrates-worker
    volumes:
      - type: volume
        source: proving_files
        target: /app/output/
      - type: bind
        source: ./nightfall-deployer/circuits
        target: /app/circuits/
      - type: bind
        source: ./zokrates-worker/src
        target: /app/src/
      - type: bind
        source: ./config/default.js
        target: /app/config/default.js
    depends_on:
      - deployer
    networks:
      - nightfall_network
    environment:
      LOG_LEVEL: info

    # Temporary container to deploy contracts and circuits and populate volumes
  deployer:
    #image: docker.pkg.github.com/eyblockchain/nightfall-deployer/nightfall_deployer:1.1.0
    build:
      context: ./nightfall-deployer
      dockerfile: Dockerfile
    volumes:
      - type: volume
        source: build
        target: /app/build/
      - type: bind
        source: ./nightfall-deployer/contracts
        target: /app/contracts/
      - type: bind
        source: ./nightfall-deployer/circuits
        target: /app/circuits/
      - type: bind
        source: ./nightfall-deployer/src
        target: /app/src/
      - type: bind
        source: ./common-files
        target: /common-files
      - type: bind
        source: ./config/default.js
        target: /app/config/default.js
      - type: bind
        source: ./nightfall-deployer/migrations
        target: /app/migrations
      - type: bind
        source: ./nightfall-deployer/truffle-config.js
        target: /app/truffle-config.js
      - type: bind
        source: ./nightfall-deployer/entrypoint.sh
        target: /app/entrypoint.sh
    networks:
      - nightfall_network
    environment:
      LOG_LEVEL: debug
      # ETH_NETWORK sets the network selected by Truffle from truffle-config.js
      # startup routines will wait for a blockchain client to be reachable on this network
      ETH_NETWORK: blockchain1
      BLOCKCHAIN_WS_HOST: blockchain1
      BLOCKCHAIN_PORT: 8546
      ZOKRATES_WORKER_HOST: worker
      USE_STUBS: 'false'

  rabbitmq1:
    image: rabbitmq
    ports:
      - '15674:15674'
      - '5672:5672'
    networks:
      - nightfall_network

  rabbitmq2:
    image: rabbitmq
    ports:
      - '15675:15674'
      - '5673:5672'
    networks:
      - nightfall_network

  optimist1:
    build:
      context: ./nightfall-optimist
    depends_on:
      - deployer
    networks:
      - nightfall_network
    ports:
      - 8081:80
      # websocket port for Optimist is on localhost:8082
      - 8082:8080
    volumes:
      - type: volume
        source: build
        target: /app/build/
      - type: bind
        source: ./nightfall-optimist/src
        target: /app/src
      - type: bind
        source: ./common-files
        target: /common-files
      - type: bind
        source: ./config/default.js
        target: /app/config/default.js
    environment:
      WEBSOCKET_PORT: 8080
      BLOCKCHAIN_WS_HOST: blockchain1
      BLOCKCHAIN_PORT: 8546
      HASH_TYPE: mimc
      LOG_LEVEL: error
      IS_CHALLENGER: 'false'
      TRANSACTIONS_PER_BLOCK: ${TRANSACTIONS_PER_BLOCK:-2}
    command: ['npm', 'run', 'dev']

  optimist2:
    build:
      context: ./nightfall-optimist
    depends_on:
      - deployer
    networks:
      - nightfall_network
    ports:
      - 8085:80
      # websocket port for Optimist is on localhost:8086
      - 8086:8080
    volumes:
      - type: volume
        source: build
        target: /app/build/
      - type: bind
        source: ./nightfall-optimist/src
        target: /app/src
      - type: bind
        source: ./common-files
        target: /common-files
      - type: bind
        source: ./config/default.js
        target: /app/config/default.js
    environment:
      WEBSOCKET_PORT: 8080
      BLOCKCHAIN_WS_HOST: blockchain1
      BLOCKCHAIN_PORT: 8546
      HASH_TYPE: mimc
      LOG_LEVEL: debug
      IS_CHALLENGER: 'true'
      TRANSACTIONS_PER_BLOCK: ${TRANSACTIONS_PER_BLOCK:-2}
    command: ['npm', 'run', 'dev']

volumes:
  mongodb1:
  mongodb2:
  proving_files:
  build:

networks:
  nightfall_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1
