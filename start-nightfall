#! /bin/bash

VOLUME_LIST=$(docker volume ls -q)
FILE=

usage()
{
  echo "Usage:"
  echo "  -g or --ganache; for a ganache simulator"
  echo "  -l or --localhost; to connect to an already running blockchain on ws://localhost:8546"
  echo "  -s or --stubs; runs with circuits stubbed out (faster but no checking of ZKP code) - use with either -g or -l"
  echo "  -h or --help; to print this message"
  echo "  -d or --dev; to bind mount the filesystem and use it for development"
  echo "  -r or --ropsten to connect testnet node (Note: please set environment variable ROPSTEN_NODE, FROM_ADDRESS, and ETH_PRIVATE_KEY. Find more description in README.md)"
}

# select a Geth or Ganache client
if [ -z "$1" ]; then
  usage
  exit 1
fi

# delete env file
rm -f ${ENV_FILE}
while [ -n "$1" ]; do
  case $1 in
      -g  | --ganache )             FILE="-f docker-compose.yml -f docker-compose.ganache.yml";
                                    ;;
      -l  | --localhost )           FILE="-f docker-compose.yml -f docker-compose.host.docker.internal.yml"
                                    ;;
      -r  | --ropsten )              FILE="-f docker-compose.yml -f docker-compose.ropsten.yml"
                                    ;;
      -h  | --help )                usage
                                    ;;
      -s  | --stubs )               STUBS="-f docker-compose.stubs.yml"
                                    ;;
      -d  | --dev )                 DEV="-f docker-compose.dev.yml"
                                    ;;
      -a  | --adversary)            ADVERSARY="-f docker-compose.adversary.yml"
                                    ;;
      -mpc)                         export MPC="true"
                                    ;;
      * )                           usage
                              exit 1
    esac
  shift
done
# FILE should always be set.  Asking for -s on its own makes no sense
if [ -z "$FILE" ]; then
  usage
  exit 1
fi
# shut down cleanly in the event of a cntl-c etc. We don't want to leave containers running
trap "docker-compose $FILE $STUBS $DEV $ADVERSARY down --remove-orphans -t 1; exit 1" SIGHUP SIGINT SIGTERM

docker-compose -f docker-compose.yml $FILE $STUBS $DEV $ADVERSARY down --remove-orphans

# if-else block checks - volume exist and then removes it.
if [[ $(echo $VOLUME_LIST | grep nightfall_3_mongodb1) ]]; then
  echo -n 'Removing '
  docker volume rm nightfall_3_mongodb1
fi

if [[ $(echo $VOLUME_LIST | grep nightfall_3_mongodb2) ]]; then
  echo -n 'Removing '
  docker volume rm nightfall_3_mongodb2
fi

if [[ $(echo $VOLUME_LIST | grep nightfall_3_build) ]]; then
  echo -n 'Removing '
  docker volume rm nightfall_3_build
fi

if [[ $(echo $VOLUME_LIST | grep nightfall_3_geth1-chain) ]]; then
  echo -n 'Removing '
  docker volume rm nightfall_3_geth1-chain
fi

if [[ $(echo $VOLUME_LIST | grep nightfall_3_geth-miner-chain1) ]]; then
  echo -n 'Removing '
  docker volume rm nightfall_3_geth-miner-chain1
fi

if [[ $(echo $VOLUME_LIST | grep nightfall_3_dag1) ]]; then
  echo -n 'Removing '
  docker volume rm nightfall_3_dag1
fi

DIR=./common-files/node_modules
if [[ -d "$DIR" ]]; then
  rm -dr common-files/node_modules
fi
#docker-compose -f docker-compose.yml $FILE up -d deployer
docker-compose $FILE $STUBS $DEV $ADVERSARY up -d --remove-orphans
docker-compose logs -f client1 optimist1 worker deployer
