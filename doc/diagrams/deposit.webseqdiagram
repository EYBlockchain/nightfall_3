title Deposit

Transactor->Client: transactionData = deposit(args)
Client->Client: prepareCommitment()
note right of Client: Generates a random number for creating the commitment. It returns when the Commitment hash is greather than BN128_GROUP_ORDER 
Client->CircomWorker: proof = generateProof(args)
Client->Client: shieldContractInstance = getContractInstance(SHIELD_CONTRACT_NAME)
Client->Client: optimisticDepositTransaction = newTransaction(args)
Client->Transaction: transformedTransaction = buildSolidityStruct(optimisticDepositTransaction)
Client->ShieldContract: rawTransaction = submitTransaction(transformedTransaction)
Client->Client: storeCommitment(commitment, nullifierKey)
note right of Client: This operation saves the commitment to the DB into the COMMITMENTS collection
Transactor->Web3: signedTransaction = signTransaction(transactionData, privateKey)
Transactor->Web3: transactionReceived = sendSignedTransaction(signedTransaction)
